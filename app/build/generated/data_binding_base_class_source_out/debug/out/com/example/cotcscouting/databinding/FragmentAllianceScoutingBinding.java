// Generated by view binder compiler. Do not edit!
package com.example.cotcscouting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cotcscouting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAllianceScoutingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button allianceSubmit;

  @NonNull
  public final TextView blueAmps;

  @NonNull
  public final Button blueAmpsDec;

  @NonNull
  public final Button blueAmpsInc;

  @NonNull
  public final TextView blueAmpsText;

  @NonNull
  public final CheckBox blueCoOp;

  @NonNull
  public final TextView blueCoOpDesc;

  @NonNull
  public final CheckBox blueEnsamble;

  @NonNull
  public final TextView blueEnsambleDesc;

  @NonNull
  public final CheckBox blueHarmony;

  @NonNull
  public final TextView blueHarmonyDesc;

  @NonNull
  public final CheckBox blueMelody;

  @NonNull
  public final TextView blueMelodyDesc;

  @NonNull
  public final EditText michaelBlue1;

  @NonNull
  public final EditText michaelBlue2;

  @NonNull
  public final EditText michaelBlue3;

  @NonNull
  public final EditText michaelRed1;

  @NonNull
  public final EditText michaelRed2;

  @NonNull
  public final EditText michaelRed3;

  @NonNull
  public final TextView redAmps;

  @NonNull
  public final Button redAmpsDec;

  @NonNull
  public final Button redAmpsInc;

  @NonNull
  public final TextView redAmpsText;

  @NonNull
  public final CheckBox redCoOp;

  @NonNull
  public final TextView redCoOpDesc;

  @NonNull
  public final CheckBox redEnsamble;

  @NonNull
  public final TextView redEnsambleDesc;

  @NonNull
  public final CheckBox redHarmony;

  @NonNull
  public final TextView redHarmonyDesc;

  @NonNull
  public final CheckBox redMelody;

  @NonNull
  public final TextView redMelodyDesc;

  private FragmentAllianceScoutingBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button allianceSubmit, @NonNull TextView blueAmps, @NonNull Button blueAmpsDec,
      @NonNull Button blueAmpsInc, @NonNull TextView blueAmpsText, @NonNull CheckBox blueCoOp,
      @NonNull TextView blueCoOpDesc, @NonNull CheckBox blueEnsamble,
      @NonNull TextView blueEnsambleDesc, @NonNull CheckBox blueHarmony,
      @NonNull TextView blueHarmonyDesc, @NonNull CheckBox blueMelody,
      @NonNull TextView blueMelodyDesc, @NonNull EditText michaelBlue1,
      @NonNull EditText michaelBlue2, @NonNull EditText michaelBlue3, @NonNull EditText michaelRed1,
      @NonNull EditText michaelRed2, @NonNull EditText michaelRed3, @NonNull TextView redAmps,
      @NonNull Button redAmpsDec, @NonNull Button redAmpsInc, @NonNull TextView redAmpsText,
      @NonNull CheckBox redCoOp, @NonNull TextView redCoOpDesc, @NonNull CheckBox redEnsamble,
      @NonNull TextView redEnsambleDesc, @NonNull CheckBox redHarmony,
      @NonNull TextView redHarmonyDesc, @NonNull CheckBox redMelody,
      @NonNull TextView redMelodyDesc) {
    this.rootView = rootView;
    this.allianceSubmit = allianceSubmit;
    this.blueAmps = blueAmps;
    this.blueAmpsDec = blueAmpsDec;
    this.blueAmpsInc = blueAmpsInc;
    this.blueAmpsText = blueAmpsText;
    this.blueCoOp = blueCoOp;
    this.blueCoOpDesc = blueCoOpDesc;
    this.blueEnsamble = blueEnsamble;
    this.blueEnsambleDesc = blueEnsambleDesc;
    this.blueHarmony = blueHarmony;
    this.blueHarmonyDesc = blueHarmonyDesc;
    this.blueMelody = blueMelody;
    this.blueMelodyDesc = blueMelodyDesc;
    this.michaelBlue1 = michaelBlue1;
    this.michaelBlue2 = michaelBlue2;
    this.michaelBlue3 = michaelBlue3;
    this.michaelRed1 = michaelRed1;
    this.michaelRed2 = michaelRed2;
    this.michaelRed3 = michaelRed3;
    this.redAmps = redAmps;
    this.redAmpsDec = redAmpsDec;
    this.redAmpsInc = redAmpsInc;
    this.redAmpsText = redAmpsText;
    this.redCoOp = redCoOp;
    this.redCoOpDesc = redCoOpDesc;
    this.redEnsamble = redEnsamble;
    this.redEnsambleDesc = redEnsambleDesc;
    this.redHarmony = redHarmony;
    this.redHarmonyDesc = redHarmonyDesc;
    this.redMelody = redMelody;
    this.redMelodyDesc = redMelodyDesc;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAllianceScoutingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAllianceScoutingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alliance_scouting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAllianceScoutingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allianceSubmit;
      Button allianceSubmit = ViewBindings.findChildViewById(rootView, id);
      if (allianceSubmit == null) {
        break missingId;
      }

      id = R.id.blue_amps;
      TextView blueAmps = ViewBindings.findChildViewById(rootView, id);
      if (blueAmps == null) {
        break missingId;
      }

      id = R.id.blue_amps_dec;
      Button blueAmpsDec = ViewBindings.findChildViewById(rootView, id);
      if (blueAmpsDec == null) {
        break missingId;
      }

      id = R.id.blue_amps_inc;
      Button blueAmpsInc = ViewBindings.findChildViewById(rootView, id);
      if (blueAmpsInc == null) {
        break missingId;
      }

      id = R.id.blue_amps_text;
      TextView blueAmpsText = ViewBindings.findChildViewById(rootView, id);
      if (blueAmpsText == null) {
        break missingId;
      }

      id = R.id.blue_co_op;
      CheckBox blueCoOp = ViewBindings.findChildViewById(rootView, id);
      if (blueCoOp == null) {
        break missingId;
      }

      id = R.id.blue_co_op_desc;
      TextView blueCoOpDesc = ViewBindings.findChildViewById(rootView, id);
      if (blueCoOpDesc == null) {
        break missingId;
      }

      id = R.id.blue_ensamble;
      CheckBox blueEnsamble = ViewBindings.findChildViewById(rootView, id);
      if (blueEnsamble == null) {
        break missingId;
      }

      id = R.id.blue_ensamble_desc;
      TextView blueEnsambleDesc = ViewBindings.findChildViewById(rootView, id);
      if (blueEnsambleDesc == null) {
        break missingId;
      }

      id = R.id.blue_harmony;
      CheckBox blueHarmony = ViewBindings.findChildViewById(rootView, id);
      if (blueHarmony == null) {
        break missingId;
      }

      id = R.id.blue_harmony_desc;
      TextView blueHarmonyDesc = ViewBindings.findChildViewById(rootView, id);
      if (blueHarmonyDesc == null) {
        break missingId;
      }

      id = R.id.blue_melody;
      CheckBox blueMelody = ViewBindings.findChildViewById(rootView, id);
      if (blueMelody == null) {
        break missingId;
      }

      id = R.id.blue_melody_desc;
      TextView blueMelodyDesc = ViewBindings.findChildViewById(rootView, id);
      if (blueMelodyDesc == null) {
        break missingId;
      }

      id = R.id.michael_blue_1;
      EditText michaelBlue1 = ViewBindings.findChildViewById(rootView, id);
      if (michaelBlue1 == null) {
        break missingId;
      }

      id = R.id.michael_blue_2;
      EditText michaelBlue2 = ViewBindings.findChildViewById(rootView, id);
      if (michaelBlue2 == null) {
        break missingId;
      }

      id = R.id.michael_blue_3;
      EditText michaelBlue3 = ViewBindings.findChildViewById(rootView, id);
      if (michaelBlue3 == null) {
        break missingId;
      }

      id = R.id.michael_red_1;
      EditText michaelRed1 = ViewBindings.findChildViewById(rootView, id);
      if (michaelRed1 == null) {
        break missingId;
      }

      id = R.id.michael_red_2;
      EditText michaelRed2 = ViewBindings.findChildViewById(rootView, id);
      if (michaelRed2 == null) {
        break missingId;
      }

      id = R.id.michael_red_3;
      EditText michaelRed3 = ViewBindings.findChildViewById(rootView, id);
      if (michaelRed3 == null) {
        break missingId;
      }

      id = R.id.red_amps;
      TextView redAmps = ViewBindings.findChildViewById(rootView, id);
      if (redAmps == null) {
        break missingId;
      }

      id = R.id.red_amps_dec;
      Button redAmpsDec = ViewBindings.findChildViewById(rootView, id);
      if (redAmpsDec == null) {
        break missingId;
      }

      id = R.id.red_amps_inc;
      Button redAmpsInc = ViewBindings.findChildViewById(rootView, id);
      if (redAmpsInc == null) {
        break missingId;
      }

      id = R.id.red_amps_text;
      TextView redAmpsText = ViewBindings.findChildViewById(rootView, id);
      if (redAmpsText == null) {
        break missingId;
      }

      id = R.id.red_co_op;
      CheckBox redCoOp = ViewBindings.findChildViewById(rootView, id);
      if (redCoOp == null) {
        break missingId;
      }

      id = R.id.red_co_op_desc;
      TextView redCoOpDesc = ViewBindings.findChildViewById(rootView, id);
      if (redCoOpDesc == null) {
        break missingId;
      }

      id = R.id.red_ensamble;
      CheckBox redEnsamble = ViewBindings.findChildViewById(rootView, id);
      if (redEnsamble == null) {
        break missingId;
      }

      id = R.id.red_ensamble_desc;
      TextView redEnsambleDesc = ViewBindings.findChildViewById(rootView, id);
      if (redEnsambleDesc == null) {
        break missingId;
      }

      id = R.id.red_harmony;
      CheckBox redHarmony = ViewBindings.findChildViewById(rootView, id);
      if (redHarmony == null) {
        break missingId;
      }

      id = R.id.red_harmony_desc;
      TextView redHarmonyDesc = ViewBindings.findChildViewById(rootView, id);
      if (redHarmonyDesc == null) {
        break missingId;
      }

      id = R.id.red_melody;
      CheckBox redMelody = ViewBindings.findChildViewById(rootView, id);
      if (redMelody == null) {
        break missingId;
      }

      id = R.id.red_melody_desc;
      TextView redMelodyDesc = ViewBindings.findChildViewById(rootView, id);
      if (redMelodyDesc == null) {
        break missingId;
      }

      return new FragmentAllianceScoutingBinding((ConstraintLayout) rootView, allianceSubmit,
          blueAmps, blueAmpsDec, blueAmpsInc, blueAmpsText, blueCoOp, blueCoOpDesc, blueEnsamble,
          blueEnsambleDesc, blueHarmony, blueHarmonyDesc, blueMelody, blueMelodyDesc, michaelBlue1,
          michaelBlue2, michaelBlue3, michaelRed1, michaelRed2, michaelRed3, redAmps, redAmpsDec,
          redAmpsInc, redAmpsText, redCoOp, redCoOpDesc, redEnsamble, redEnsambleDesc, redHarmony,
          redHarmonyDesc, redMelody, redMelodyDesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
